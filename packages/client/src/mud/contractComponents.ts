/* Autogenerated file. Do not edit manually. */

import { TableId } from "@latticexyz/utils";
import { defineComponent, Type as RecsType, World } from "@latticexyz/recs";

export function defineContractComponents(world: World) {
  return {
    BlackJack: (() => {
      const tableId = new TableId("", "BlackJack");
      return defineComponent(
        world,
        {
          userWins: RecsType.BigInt,
          userLosses: RecsType.BigInt,
          gameEnded: RecsType.Boolean,
          userWon: RecsType.Boolean,
          userCards: RecsType.BigIntArray,
          dealerCards: RecsType.BigIntArray,
        },
        {
          metadata: {
            contractId: tableId.toHexString(),
            tableId: tableId.toString(),
          },
        }
      );
    })(),
    RequestIdToBlackJackUser: (() => {
      const tableId = new TableId("", "RequestIdToBlack");
      return defineComponent(
        world,
        {
          user: RecsType.String,
        },
        {
          metadata: {
            contractId: tableId.toHexString(),
            tableId: tableId.toString(),
          },
        }
      );
    })(),
    VRFRequests: (() => {
      const tableId = new TableId("", "VRFRequests");
      return defineComponent(
        world,
        {
          msgSender: RecsType.String,
          nonce: RecsType.BigInt,
          blockNumber: RecsType.BigInt,
          callbackGasLimit: RecsType.Number,
          nbWords: RecsType.Number,
          callbackSelector: RecsType.String,
        },
        {
          metadata: {
            contractId: tableId.toHexString(),
            tableId: tableId.toString(),
          },
        }
      );
    })(),
    VRFNonce: (() => {
      const tableId = new TableId("", "VRFNonce");
      return defineComponent(
        world,
        {
          value: RecsType.BigInt,
        },
        {
          metadata: {
            contractId: tableId.toHexString(),
            tableId: tableId.toString(),
          },
        }
      );
    })(),
  };
}
